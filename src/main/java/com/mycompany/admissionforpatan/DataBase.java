/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.admissionforpatan;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author Programming-learning
 */
public class DataBase extends javax.swing.JFrame {

    /**
     * Creates new form DataBase
     */
    public DataBase() {
        initComponents();
        ImageIcon imgg = new ImageIcon("src\\main\\icons\\mysql.png");
        setIconImage(imgg.getImage());
        ujdbccs.setSelected(true);
        uldc.setSelected(false);
        unicode.setSelected(true);
        fc.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        zone = new javax.swing.JTextField();
        server = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        database = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        result = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        port = new javax.swing.JTextField();
        user = new javax.swing.JTextField();
        pass = new javax.swing.JTextField();
        ujdbccs = new javax.swing.JCheckBox();
        unicode = new javax.swing.JCheckBox();
        uldc = new javax.swing.JCheckBox();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        convalue1 = new javax.swing.JTextField();
        fc = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(300, 300, 277, 277));
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jp.setBackground(new java.awt.Color(255, 255, 255));
        jp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpMouseEntered(evt);
            }
        });
        jp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator3.setForeground(new java.awt.Color(0, 0, 255));
        jp.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 60, 10));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("MySQL Database Setting");
        jp.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Type:");
        jp.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 66, -1, 20));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Password:");
        jp.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 70, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("DataBase:");
        jp.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 70, 20));

        zone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        zone.setForeground(new java.awt.Color(0, 0, 255));
        zone.setText("UTC");
        zone.setBorder(null);
        zone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoneActionPerformed(evt);
            }
        });
        jp.add(zone, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 40, 20));

        server.setEditable(false);
        server.setBackground(new java.awt.Color(255, 255, 255));
        server.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        server.setForeground(new java.awt.Color(0, 153, 153));
        server.setText("localhost");
        server.setBorder(null);
        server.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverActionPerformed(evt);
            }
        });
        jp.add(server, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 69, 70, -1));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 255));
        jp.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 87, 70, 10));

        database.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        database.setForeground(new java.awt.Color(0, 0, 255));
        database.setText("patan_admin");
        database.setBorder(null);
        database.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                databaseActionPerformed(evt);
            }
        });
        jp.add(database, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 90, -1));

        jSeparator2.setForeground(new java.awt.Color(0, 0, 255));
        jp.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 90, 10));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Test Database");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jp.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, -1, -1));

        result.setForeground(new java.awt.Color(204, 0, 0));
        result.setText("Result:");
        jp.add(result, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 150, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Port:");
        jp.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Username:");
        jp.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Server Timezone:");
        jp.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, -1, -1));

        port.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        port.setForeground(new java.awt.Color(0, 0, 255));
        port.setText("3306");
        port.setBorder(null);
        port.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portActionPerformed(evt);
            }
        });
        jp.add(port, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 60, 20));

        user.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        user.setForeground(new java.awt.Color(0, 0, 255));
        user.setText("root");
        user.setBorder(null);
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        jp.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 73, 20));

        pass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pass.setForeground(new java.awt.Color(0, 0, 255));
        pass.setBorder(null);
        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });
        jp.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 160, 76, 20));

        ujdbccs.setBackground(new java.awt.Color(255, 255, 255));
        ujdbccs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ujdbccs.setText("useJDBCCompliantTimezoneShift");
        ujdbccs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ujdbccsActionPerformed(evt);
            }
        });
        jp.add(ujdbccs, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        unicode.setBackground(new java.awt.Color(255, 255, 255));
        unicode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        unicode.setText("Unicode");
        unicode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unicodeActionPerformed(evt);
            }
        });
        jp.add(unicode, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        uldc.setBackground(new java.awt.Color(255, 255, 255));
        uldc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        uldc.setText("useLegacyDatetimeCode");
        uldc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uldcActionPerformed(evt);
            }
        });
        jp.add(uldc, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, -1, -1));

        jSeparator4.setForeground(new java.awt.Color(0, 0, 255));
        jp.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 80, 7));

        jSeparator5.setForeground(new java.awt.Color(0, 0, 255));
        jp.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(94, 180, 80, 10));

        jSeparator6.setForeground(new java.awt.Color(0, 0, 255));
        jp.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, 50, 7));

        jLabel6.setText("Config File");
        jp.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 34, -1, 30));

        jLabel9.setText("Connected to:");
        jp.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Import");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jp.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 70, 20));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Export");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jp.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 70, 20));

        convalue1.setBorder(null);
        jp.add(convalue1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 250, 20));

        getContentPane().add(jp, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 331, 280));

        fc.setBackground(new java.awt.Color(255, 255, 255));
        fc.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        fc.setForeground(new java.awt.Color(0, 0, 255));
        fc.setToolTipText("");
        fc.setBorder(null);
        fc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fcActionPerformed(evt);
            }
        });
        getContentPane().add(fc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 280));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void zoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zoneActionPerformed

    private void serverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serverActionPerformed

    private void databaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_databaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_databaseActionPerformed
    public String servertext, porttext, databasetext, zonetext, usertext, passtext;
    public boolean unicodet, ujdbct, uldct;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        result.setText("result");
        convalue1.setText("");
        try {
            SqlConnect sq = new SqlConnect(server.getText(), port.getText(), database.getText(), unicode.isSelected(), ujdbccs.isSelected(), uldc.isSelected(), zone.getText(), user.getText(), pass.getText());
            result.setText("result:" + sq.Response());
            convalue1.setText(sq.Returncon());
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(DataBase.class.getName()).log(Level.SEVERE, null, ex);
            result.setText("database error");
        } catch (IOException ex) {
            Logger.getLogger(DataBase.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void portActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userActionPerformed

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passActionPerformed

    private void ujdbccsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ujdbccsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ujdbccsActionPerformed

    private void uldcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uldcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uldcActionPerformed

    private void unicodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unicodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unicodeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            fc.setVisible(true);
            jp.setVisible(false);
        fc.setDialogTitle("Import config from");
        action=1;
    }//GEN-LAST:event_jButton2ActionPerformed
int action;
    class importConfig{
    public importConfig()
    {
         try {
                    BufferedReader br;
                    br = new BufferedReader(new FileReader(f1));
                    port.setText(br.readLine());
                    zone.setText(br.readLine());
                    database.setText(br.readLine());
                    user.setText(br.readLine());
                    pass.setText(br.readLine());
                    if (br.readLine().equals("true")) {
                        unicode.setSelected(true);
                    } else {
                        unicode.setSelected(false);
                    }
                    if (br.readLine().equals("true")) {
                        uldc.setSelected(true);
                    } else {
                        uldc.setSelected(false);
                    }
                    if (br.readLine().equals("true")) {
                        ujdbccs.setSelected(true);
                    } else {
                        ujdbccs.setSelected(false);
                    }
                    result.setText("Import success");
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(DataBase.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(DataBase.class.getName()).log(Level.SEVERE, null, ex);
                }
    }
}
    private void jpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_jpMouseEntered

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        // TODO add your handling code here:
        // setBounds(200, 200,328, 275);
    }//GEN-LAST:event_formComponentAdded

    private void fcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fcActionPerformed
        try {
            jp.setVisible(true);
            fc.setVisible(false);
            f1=fc.getSelectedFile();
            switch(action)
            {
                case 1:
                    new importConfig();
                    break;
                case 2:
                    new configExport();
                    break;
                default:
                    break;
            }
        } catch (IOException ex) {
            Logger.getLogger(DataBase.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_fcActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // setBounds(200, 200,329, 274);       // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        fc.setVisible(true);
        jp.setVisible(false);
        
        //fc.setDialogType(2);
        fc.setDialogTitle("Export config");
        //new configExport();
        action=2;
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    File f1;

    class configExport {

        public configExport() throws IOException {

            if (f1.exists()) {
                FileWriter br;
                File f2=new File(f1+"\\config.txt");
                f2.createNewFile();
                try {
                    br = new FileWriter(f2);
                    br.write(port.getText() + "\n" + zone.getText() + "\n" + database.getText() + "\n" + user.getText() + "\n" + pass.getText() + "\n" + unicode.isSelected() + "\n" + uldc.isSelected() + "\n" + ujdbccs.isSelected());
                    br.close();
                    result.setText("Export success");
                } catch (IOException ex) {
                    result.setText("error while writing");
                    Logger.getLogger(DataBase.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    //   br.close();

                }
            } else {
                result.setText("error while writing");
            }
        }
    }

    /**
     */
    public static void mainsql() {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DataBase().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField convalue1;
    private javax.swing.JTextField database;
    private javax.swing.JFileChooser fc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JPanel jp;
    private javax.swing.JTextField pass;
    private javax.swing.JTextField port;
    private javax.swing.JLabel result;
    private javax.swing.JTextField server;
    private javax.swing.JCheckBox ujdbccs;
    private javax.swing.JCheckBox uldc;
    private javax.swing.JCheckBox unicode;
    private javax.swing.JTextField user;
    private javax.swing.JTextField zone;
    // End of variables declaration//GEN-END:variables
public File fconfig;
}
